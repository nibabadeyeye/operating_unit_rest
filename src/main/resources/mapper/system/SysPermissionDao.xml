<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gpdi.operatingunit.dao.system.SysPermissionMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.gpdi.operatingunit.entity.system.SysPermission" id="sysPermissionMap">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="parentId" column="parent_id"/>
        <result property="url" column="url"/>
        <result property="perms" column="perms"/>
        <result property="icon" column="icon"/>
        <result property="level" column="level"/>
        <result property="seq" column="seq"/>
        <result property="enable" column="enable"/>
        <result property="createOperId" column="create_oper_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateOperId" column="update_oper_id"/>
        <result property="updateTime" column="update_time"/>
        <result property="createOper" column="createOper"/>
        <result property="updateOper" column="updateOper"/>
    </resultMap>

    <select id="queryUserPermission" resultMap="sysPermissionMap">
        select DISTINCT p.*
        from sys_permission p
        join rel_role_permission rp on rp.permission_id = p.id
        join rel_user_role ur on ur.role_id = rp.role_id
        where ur.user_id = #{userId} and p.enable = 1
        order by p.`level`,p.parent_id,p.seq
    </select>

    <select id="queryPermissionData" resultMap="sysPermissionMap">
        select * from sys_permission where `enable` = 1 order by seq
    </select>

    <select id="queryAllPermission" resultMap="sysPermissionMap">
        select a.*,b.`name` as createOper,c.`name` as updateOper
        from sys_permission a
        left join sys_user b on a.create_oper_id = b.id
        left join sys_user c on a.update_oper_id = c.id
        order by a.`level`,a.parent_id,a.seq
    </select>

    <select id="getById" resultMap="sysPermissionMap">
        select a.*,b.`name` as createOper,c.`name` as updateOper
        from sys_permission a
        left join sys_user b on a.create_oper_id = b.id
        left join sys_user c on a.update_oper_id = c.id
        where a.id = #{id}
    </select>

    <update id="updateEnableByIds">
        update sys_permission set `enable` = #{enable}, update_time = NOW(), update_oper_id = #{updateOperId}
        where id in
        <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="getMaxSeqByLevelAndParentId" resultType="java.lang.Integer">
        select max(seq) from sys_permission where `level` = #{level} and parent_id = #{parentId}
    </select>

    <select id="queryAllChildIds" resultType="java.lang.Integer">
        select id from (
        select t1.id,
        if(find_in_set(parent_id, @pids) > 0, @pids := concat(@pids, ',', id), 0) as ischild
        from (select id,parent_id from sys_permission t order by parent_id, id) t1,
        (select @pids := #{id}) t2
        ) t3 where ischild != 0
    </select>

    <select id="queryPermissionByUserIdAndLevel" resultMap="sysPermissionMap">
        select DISTINCT p.*
        from sys_permission p
        join rel_role_permission rp on rp.permission_id = p.id
        join rel_user_role ur on ur.role_id = rp.role_id
        where ur.user_id = #{userId} and p.level = #{level} and p.enable = 1
        order by p.`level`,p.parent_id,p.seq
    </select>

</mapper>